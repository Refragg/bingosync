services:
  db:
    image: postgres
    container_name: bingosync-postgres
    expose:
      - "5432"
    env_file: 'secrets.env'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 60s
      retries: 5
  app:
    build:
      context: ./bingosync-app/
      dockerfile: Dockerfile
    container_name: bingosync-app
    stop_signal: SIGINT
    env_file: 'secrets.env'
    command: bash -c "
        python3 ./manage.py makemigrations
        && python3 ./manage.py migrate
        && echo yes | python3 ./manage.py collectstatic
        && python3 ./manage.py createsuperuserwithpassword --username $${DJANGO_SUPERUSER_USERNAME} --password $${DJANGO_SUPERUSER_PASSWORD} --email $${DJANGO_SUPERUSER_EMAIL} --preserve
        && gunicorn bingosync.wsgi:application --bind 0.0.0.0:8000
      "
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
  yarp:
    build:
      context: ./bingosync-yarp/
      dockerfile: Dockerfile
      args:
        - SSL_CERT_FILE=${SSL_CERT_FILE}
        - SSL_CERT_PASSWORD=${SSL_CERT_PASSWORD}
        - PUBLIC_DOMAIN=${PUBLIC_DOMAIN}
    container_name: bingosync-yarp
    environment:
      SSL_CERT_FILE: ${SSL_CERT_FILE}
      SSL_CERT_PASSWORD: ${SSL_CERT_PASSWORD}
      PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
    ports:
      - 80:80
      - 443:443
      - 8888:8888
    depends_on:
      - app
    volumes:
      - ${SSL_CERT_PATH}:/certs
  ws:
    build:
      context: ./bingosync-websocket
      dockerfile: Dockerfile
    container_name: bingosync-websocket
    stop_signal: SIGINT
    command: python3 -u ./app.py
    env_file: 'secrets.env'
    expose:
      - "8889"
    depends_on:
      - app